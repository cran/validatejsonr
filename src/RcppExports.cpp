// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// validate_jsonfile_with_schemafile
List validate_jsonfile_with_schemafile(std::string jsonfn, std::string schemafn);
RcppExport SEXP validatejsonr_validate_jsonfile_with_schemafile(SEXP jsonfnSEXP, SEXP schemafnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type jsonfn(jsonfnSEXP);
    Rcpp::traits::input_parameter< std::string >::type schemafn(schemafnSEXP);
    rcpp_result_gen = Rcpp::wrap(validate_jsonfile_with_schemafile(jsonfn, schemafn));
    return rcpp_result_gen;
END_RCPP
}
// validate_json_with_schemafile
List validate_json_with_schemafile(std::string json_string, std::string schemafn);
RcppExport SEXP validatejsonr_validate_json_with_schemafile(SEXP json_stringSEXP, SEXP schemafnSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type json_string(json_stringSEXP);
    Rcpp::traits::input_parameter< std::string >::type schemafn(schemafnSEXP);
    rcpp_result_gen = Rcpp::wrap(validate_json_with_schemafile(json_string, schemafn));
    return rcpp_result_gen;
END_RCPP
}
// validate_jsonfile_with_schema
List validate_jsonfile_with_schema(std::string jsonfn, std::string schema_string);
RcppExport SEXP validatejsonr_validate_jsonfile_with_schema(SEXP jsonfnSEXP, SEXP schema_stringSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type jsonfn(jsonfnSEXP);
    Rcpp::traits::input_parameter< std::string >::type schema_string(schema_stringSEXP);
    rcpp_result_gen = Rcpp::wrap(validate_jsonfile_with_schema(jsonfn, schema_string));
    return rcpp_result_gen;
END_RCPP
}
// validate_json_with_schema
List validate_json_with_schema(std::string json_string, std::string schema_string);
RcppExport SEXP validatejsonr_validate_json_with_schema(SEXP json_stringSEXP, SEXP schema_stringSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type json_string(json_stringSEXP);
    Rcpp::traits::input_parameter< std::string >::type schema_string(schema_stringSEXP);
    rcpp_result_gen = Rcpp::wrap(validate_json_with_schema(json_string, schema_string));
    return rcpp_result_gen;
END_RCPP
}
